I"ñ	<p>In this post, I will try to explain some interesting ideas around multi-armed bandits. Defining a simple multi-armed-bandit as follows</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">multiArmedBandit</span><span class="p">(</span><span class="n">k</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">return</span> <span class="mi">2</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span>
    <span class="k">elif</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">()</span><span class="o">+</span><span class="mi">2</span>
    <span class="k">elif</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
        <span class="k">return</span> <span class="mi">3</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">()</span>
    <span class="k">elif</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">None</span> </code></pre></figure>

<p>It is clear that arm 1 has the largest expected value of reward which is equal to 2. Hence, the optimal value <code class="highlighter-rouge">v*</code> is equal to 2. This value will be used to compute the regret. Also we have</p>
<ul>
  <li>q(0) = 1    =&gt;  regret = 1</li>
  <li>q(1) = 2    =&gt;  regret = 0</li>
  <li>q(2) = 0    =&gt;  regret = 2</li>
  <li>q(3) = 0    =&gt;  regret = 2</li>
</ul>
:ET